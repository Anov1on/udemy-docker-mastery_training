# create your drupal and postgres config here, based off the last assignment



version: "3.8"

services:
  # Define your service(s) here
  web:
    image: custom-drupal # use custom drupal based on drupal:9
    build: .
    ports:
      - 8080:80
    restart: unless-stopped
    volumes:
      - drupal-modules:/var/www/html/modules
      - drupal-profiles:/var/www/html/profiles       
      - drupal-sites:/var/www/html/sites      
      - drupal-themes:/var/www/html/themes
      - drupal-data:/var/lib/postgresql/data
  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=drupal
      - POSTGRES_USER=user

volumes:
  drupal-modules:
  drupal-profiles:
  drupal-sites:
  drupal-themes:
  drupal-data:


#networks:
  # Define any custom networks your services need
#  my-network



#- We're going to build a custom image in this compose file for drupal service.---ok
#Use Compose file from previous assignment for Drupal to start with, and we'll add to it, as well as change image name.---ok
#- Rename image to `custom-drupal` as we want to make a new image based on the official `drupal:9`.-------ok
#- We want to build the default Dockerfile in this directory by adding `build: .` to the `drupal` service.
#When we add a build + image value to a compose service,
#it knows to use the image name to write to in our image cache, rather then pull from Docker Hub.
#- For the `postgres:14` service, you need the same password as in previous assignment,
#but also add a volume for `drupal-data:/var/lib/postgresql/data` so the database will
#persist across Compose restarts.